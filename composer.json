{
    "name": "ramsey/php-library-coding-standard",
    "type": "phpcodesniffer-standard",
    "description": "A common coding standard for Ramsey's PHP libraries.",
    "keywords": [
        "development",
        "phpcs",
        "standards",
        "tools"
    ],
    "license": "MIT",
    "authors": [
        {
            "name": "Ben Ramsey",
            "email": "ben@benramsey.com",
            "homepage": "https://benramsey.com"
        }
    ],
    "require": {
        "php": "^7.4 || ^8",
        "dealerdirect/phpcodesniffer-composer-installer": "^0.7.0",
        "slevomat/coding-standard": "^6.3",
        "squizlabs/php_codesniffer": "^3.5"
    },
    "require-dev": {
        "captainhook/captainhook": "^5.3",
        "ergebnis/composer-normalize": "^2.6",
        "hamcrest/hamcrest-php": "^2",
        "mockery/mockery": "^1.4",
        "phpstan/extension-installer": "^1",
        "phpstan/phpstan": "^0.12.32",
        "phpstan/phpstan-mockery": "^0.12.5",
        "phpstan/phpstan-phpunit": "^0.12.11",
        "phpunit/phpunit": "^9.3",
        "ramsey/conventional-commits": "^1.0",
        "vimeo/psalm": "^3.12.2"
    },
    "config": {
        "sort-packages": true
    },
    "autoload": {
        "psr-4": {
            "Ramsey\\CodingStandard\\": "src/Ramsey/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Ramsey\\Test\\CodingStandard\\": "tests/"
        },
        "files": [
            "vendor/hamcrest/hamcrest-php/hamcrest/Hamcrest.php"
        ]
    },
    "scripts": {
        "post-autoload-dump": "captainhook install --ansi -f -s",
        "br:analyze": [
            "@br:analyze:phpstan",
            "@br:analyze:psalm"
        ],
        "br:analyze:phpstan": "phpstan analyse --memory-limit=1G",
        "br:analyze:psalm": "psalm --diff --diff-methods --show-info=true --config=psalm.xml",
        "br:build:clean": "git clean -fX build/.",
        "br:build:clear-cache": "git clean -fX build/cache/.",
        "br:lint": "phpcs --cache=build/cache/phpcs.cache",
        "br:lint:fix": "./bin/lint-fix.sh",
        "br:test": "phpunit",
        "br:test:all": [
            "@br:lint",
            "@br:analyze",
            "@br:test"
        ],
        "br:test:coverage:ci": "phpunit --coverage-clover build/logs/clover.xml",
        "br:test:coverage:html": "phpunit --coverage-html build/coverage",
        "pre-commit": [
            "@br:lint:fix",
            "@br:lint",
            "@br:analyze"
        ],
        "test": "@br:test:all"
    },
    "scripts-descriptions": {
        "br:analyze": "Performs static analysis on the code base.",
        "br:analyze:phpstan": "Runs the PHPStan static analyzer.",
        "br:analyze:psalm": "Runs the Psalm static analyzer.",
        "br:build:clean": "Removes everything not under version control from the build directory.",
        "br:build:clear-cache": "Removes everything not under version control from build/cache/.",
        "br:lint": "Checks all source code for coding standards issues.",
        "br:lint:fix": "Checks source code for coding standards issues and fixes them, if possible.",
        "br:test": "Runs the full unit test suite.",
        "br:test:all": "Runs linting, static analysis, and unit tests.",
        "br:test:coverage:ci": "Runs the unit test suite and generates a Clover coverage report.",
        "br:test:coverage:html": "Runs the unit tests suite and generates an HTML coverage report.",
        "pre-commit": "These commands are run as part of a Git pre-commit hook installed using captainhook/captainhook. Each command should be prepared to accept a list of space-separated staged files.",
        "test": "Shortcut to run the full test suite."
    }
}
